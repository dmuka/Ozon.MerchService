services:
  merch_db:
    image: postgres:latest
    ports:
      - 5426:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: merch_password
      POSTGRES_DB: merch
    command: "-c log_statement=all"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - merch_db:/var/lib/postgresql/data    
    networks:
      - ozon-network
    
  merch_service:
    image: ozon-merch-service
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 5002:8080
      - 5003:8081
    environment:
      DBConnectionOptions__ConnectionString: "Host=host.docker.internal;Port=5426;Database=merch;Username=postgres;Password=merch_password"
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8081;http://+:8080    
    networks:
      - ozon-network
    depends_on:
      merch_db:
        condition: service_healthy
    entrypoint: ["./wait-for-it.sh", "merch_db:5426", "--", "/bin/bash", "entrypoint.sh"]

  broker:
    image: confluentinc/cp-kafka:6.2.0
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - ozon-network

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ozon-network

  mongo:
    image: mongo:7.0.12
    volumes:
      - mongo_data:/data/db
    networks:
      - ozon-network

  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - ozon-network
  
  kibana:
    image: kibana:7.14.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://localhost:9200
    ports:
      - "5601:5601"
    networks:
      - ozon-network

  graylog:
    image: graylog/graylog:6.0.4
    environment:
      - GRAYLOG_PASSWORD_SECRET=DextFExLrQEQybLINupLwTsSxBOykiSfQcGM6MRJFlfhJiHP3OJmxHIdKAVgg0Z3jQFjilisQ403KZkZ8tJhYLIffwErDHmi
      - GRAYLOG_ROOT_PASSWORD_SHA2=43ff2fa097c98ca4b9890919503a35f72c41098daf36bc132cb990f715f24ec3
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - mongo
      - elasticsearch
    ports:
      - "9000:9000"
      - "12201:12201/udp"
    volumes:
      - graylog_data:/usr/share/graylog/data
    networks:
      - ozon-network

networks:
  ozon-network:
    driver: bridge

volumes:
  merch_db:
    driver: local
  mongo_data:
    driver: local
  es_data:
    driver: local
  graylog_data:
    driver: local